load("//:chre.bzl", "chre_cc_library")
load("//:chre.bzl", "gtest_cc_test")

package(
    default_visibility = [
        "//visibility:public",
    ],
)

chre_cc_library(
    name = "event",
    hdrs = [
        "include/chre/core/event.h",
        "include/chre/core/event_ref_queue.h",
    ],
    deps = [
        "//chre_api:chre_api",
        "//platform:assert",
        "//platform:log",
        "//util:non_copyable",
    ],
)

chre_cc_library(
    name = "event_loop",
    hdrs = [
        "include/chre/core/event_loop.h",
        "include/chre/core/event_loop_manager.h",
        "include/chre/core/timer_pool.h",
    ],
    srcs = [
        "event_loop.cc",
        "event_loop_manager.cc",
        "timer_pool.cc",
    ],
    deps = [
        "//core:event",
        "//core:nanoapp",
        "//platform:fatal_error",
        "//platform:system_time",
        "//platform:system_timer",
    ],
)

chre_cc_library(
    name = "init",
    hdrs = [
        "include/chre/core/init.h",
    ],
    srcs = [
        "init.cc",
    ],
    deps = [
        "//platform:platform",
        "//platform:sensor_context",
    ],
)

chre_cc_library(
    name = "request_multiplexer",
    hdrs = [
        "include/chre/core/request_multiplexer.h",
        "include/chre/core/request_multiplexer_impl.h",
    ],
    deps = [
        "//platform:assert",
        "//util:util",
    ],
)

chre_cc_library(
    name = "sensors",
    hdrs = [
        "include/chre/core/sensors.h",
    ],
    srcs = [
        "sensors.cc",
    ],
    deps = [
        "//chre_api:chre_api",
        "//platform:assert",
        "//util:util",
    ],
)

chre_cc_library(
    name = "nanoapp",
    hdrs = [
        "include/chre/core/nanoapp.h",
    ],
    srcs = [
        "nanoapp.cc",
    ],
    deps = [
        "//core:event",
        "//platform:fatal_error",
        "//platform:platform_nanoapp",
        "//util:util",
    ],
)

gtest_cc_test(
    name = "request_multiplexer_test",
    srcs = [
        "tests/request_multiplexer_test.cc",
    ],
    deps = [
        "//core:request_multiplexer",
    ],
)

gtest_cc_test(
    name = "sensors_test",
    srcs = [
        "tests/sensors_test.cc",
    ],
    deps = [
        "//core:sensors",
    ],
)
